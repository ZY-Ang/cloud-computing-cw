# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

defaults: &config_project_defaults
  working_directory: ~/repo

executors:
  node_default:
    docker:
      - image: circleci/node:12.13.0

orbs:
  aws-cli: circleci/aws-cli@0.1.22

commands:
  configure_aws:
    description: "Sets up AWS profiles, CLI and configuration"
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          profile-name: highsugar
  install_root_deps:
    description: "Installs root npm dependencies. Requires checkout of repo into ~/repo first."
    steps:
      - restore_cache:
          keys:
            - v1-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ .Revision }}
            - v1-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v1-{{ arch }}-{{ .Branch }}
            - v1-{{ arch }}
      - run:
          working_directory: ~/repo
          command: npm install
      - save_cache:
          paths:
            - ~/repo/node_modules
          key: v1-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ .Revision }}

jobs:
  deploy_ibm_cf:
    <<: *config_project_defaults
    executor: node_default
    steps:
      - checkout
      - run: curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
      - run: which ibmcloud
      - run: ibmcloud login -u $CF_USERNAME -p $CF_PASSWORD -r us-south
      - run: ibmcloud target -o $CF_USERNAME -s prod -r us-south
#      - run: |
#          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
#          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
#          sudo apt-get update
#          sudo apt-get install cf-cli
#      - run: which cf && cf --version
#      - run: cf login -a "api.us-south.cf.cloud.ibm.com" -u $CF_USERNAME -p $CF_PASSWORD -o $CF_USERNAME -s prod
#      - run: cf push
      - run:
          working_directory: ~/repo/ibmcloudfoundryapp
          command: npm run deploy
  deploy_wp_single:
    <<: *config_project_defaults
    executor: node_default
    steps:
      - checkout
      - configure_aws
      - run:
          name: Deploy Architecture
          working_directory: ~/repo/awswordpress/single-instance
          command: >-
            aws cloudformation deploy
            --template-file template.yaml
            --stack-name cs5224-wp-single
            --parameter-overrides DBName=wordpressdb DBPassword=$DB_PASS DBRootPassword=$DB_PASS DBUser=$DB_USER InstanceType=t2.nano KeyName=nusinstanceskeypair SSHLocation=0.0.0.0/0
            --profile highsugar
            --region $AWS_REGION
            --no-fail-on-empty-changeset
  deploy_wp_multiaz:
    <<: *config_project_defaults
    executor: node_default
    steps:
      - checkout
      - configure_aws
      - install_root_deps
      - run:
          name: Setup dependent environment variables from default VPC
          command: |
            echo "export DEFAULT_VPC_ID=$(node ~/repo/vpc.js vpc)" >> $BASH_ENV
            echo "export DEFAULT_SUBNET_IDS=$(node ~/repo/vpc.js subnet)" >> $BASH_ENV
      - run:
          name: Deploy Architecture
          working_directory: ~/repo/awswordpress/multi-az
          command: >-
            aws cloudformation deploy
            --template-file template.yaml
            --stack-name cs5224-wp-multiaz
            --parameter-overrides DBAllocatedStorage=5 DBClass=db.t2.small DBInstanceIdentifier=db-cs5224-wp-multiaz DBName=wordpressdb DBPassword=$DB_PASS DBUser=$DB_USER InstanceType=t2.small KeyName=nusinstanceskeypair MultiAZDatabase=true SSHLocation=0.0.0.0/0 Subnets=$DEFAULT_SUBNET_IDS VpcId=$DEFAULT_VPC_ID WebServerCapacity=3
            --profile highsugar
            --region $AWS_REGION
            --no-fail-on-empty-changeset

workflows:
  version: 2
  master_flow:
    jobs:
      - deploy_ibm_cf:
          filters:
            branches:
              only:
                - master
      - deploy_wp_single:
          filters:
            branches:
              only:
                - master
      - deploy_wp_multiaz:
          filters:
            branches:
              only:
                - master
